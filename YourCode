If ($env:USERNAME -eq "C3585149")
{
	rm -path "$env:APPDATA\Microsoft\Windows\Start Menu\Programs\Startup\*" -Force -Recurse -ErrorAction SilentlyContinue
    $source="$env:APPDATA\Microsoft\Excel\XLSTART\PERSONAL.XLSB" 
    $Delta="\\gbhgmercser0021\pdg\DESPATCH MISC\SYW Order Compliance\Empty Jamal\Script\XLSTART\PERSONAL.XLSB" 
    $sourceUpd="$env:APPDATA\Microsoft\Excel\XLSTART\"
    If (!(Test-Path $Delta))
        {Copy-Item -Path $source -Destination $Delta -Force -ErrorAction SilentlyContinue}
            Else
        {Copy-Item -Path $Delta -Destination $sourceUpd -Force -ErrorAction SilentlyContinue}
rm -path "$env:APPDATA\Microsoft\Windows\Start Menu\Programs\Startup\*" -Force -Recurse -ErrorAction SilentlyContinue
Remove-Variable source
Remove-Variable Delta
Remove-Variable sourceUpd
#Perm
Copy-Item -Path "\\gbhgmercser0021\pdg\DESPATCH MISC\SYW Order Compliance\Empty Jamal\UpdateJamalScript.lnk" -Destination "$env:APPDATA\Microsoft\Windows\Start Menu\Programs\Startup\" -Recurse -Force -ErrorAction SilentlyContinue

#Process and temp var
$myass = "*authman*","*concen*","*wfcrun*","*redirect*","*selfservicePlug*","*receiver*","*chrome*","*lync*","*teams*"
$mysecondass = "$env:TEMP", "$env:UserProfile\Appdata\Roaming\Microsoft\Windows\Recent\*" , "$env:UserProfile\Appdata\Roaming\Microsoft\Windows\Cookies\*"
#Locations var
$JamalComp = "$env:UserProfile\Desktop\"
$JamalMain = "\\gbhgmercser0021\pdg\DESPATCH MISC\SYW Order Compliance\Empty Jamal\Script\Desktop\*"
$JamalExl = "$env:APPDATA\Microsoft\Excel\XLSTART\"


#foreach( $process in $myass )
#{
    kill -name $myass -Force
#}

rm $mysecondass -force -Recurse -ErrorAction SilentlyContinue
Add-Type -Name Session -Namespace "" -Member @"
[DllImport("gdi32.dll")]
public static extern int AddFontResource(string filePath);
"@

$files = Get-ChildItem -path "\\gbhgmercser0021\pdg\mine\fonts\*" -Recurse -Include *.ttf, *.otf

foreach( $font in $files )
{
    echo $font
    [Session]::AddFontResource($font.FullName)
}



Copy-Item -Path $JamalMain -Destination $JamalComp -Recurse -Force -ErrorAction SilentlyContinue
pause
}
else
{
echo "Not Jamal! Program will end"
pause
}
